// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: filehash.proto

package types

import (
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/cosmos-sdk/types/tx"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgUploadFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Creator       string                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	FileHash      string                 `protobuf:"bytes,2,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgUploadFile) Reset() {
	*x = MsgUploadFile{}
	mi := &file_filehash_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgUploadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUploadFile) ProtoMessage() {}

func (x *MsgUploadFile) ProtoReflect() protoreflect.Message {
	mi := &file_filehash_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUploadFile.ProtoReflect.Descriptor instead.
func (*MsgUploadFile) Descriptor() ([]byte, []int) {
	return file_filehash_proto_rawDescGZIP(), []int{0}
}

func (x *MsgUploadFile) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUploadFile) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

type MsgUploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgUploadFileResponse) Reset() {
	*x = MsgUploadFileResponse{}
	mi := &file_filehash_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgUploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUploadFileResponse) ProtoMessage() {}

func (x *MsgUploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filehash_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUploadFileResponse.ProtoReflect.Descriptor instead.
func (*MsgUploadFileResponse) Descriptor() ([]byte, []int) {
	return file_filehash_proto_rawDescGZIP(), []int{1}
}

func (x *MsgUploadFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type QueryFileListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *query.PageRequest     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFileListRequest) Reset() {
	*x = QueryFileListRequest{}
	mi := &file_filehash_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileListRequest) ProtoMessage() {}

func (x *QueryFileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filehash_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileListRequest.ProtoReflect.Descriptor instead.
func (*QueryFileListRequest) Descriptor() ([]byte, []int) {
	return file_filehash_proto_rawDescGZIP(), []int{2}
}

func (x *QueryFileListRequest) GetPagination() *query.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryFileListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileData            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Pagination    *query.PageResponse    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFileListResponse) Reset() {
	*x = QueryFileListResponse{}
	mi := &file_filehash_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileListResponse) ProtoMessage() {}

func (x *QueryFileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filehash_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileListResponse.ProtoReflect.Descriptor instead.
func (*QueryFileListResponse) Descriptor() ([]byte, []int) {
	return file_filehash_proto_rawDescGZIP(), []int{3}
}

func (x *QueryFileListResponse) GetFiles() []*FileData {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *QueryFileListResponse) GetPagination() *query.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type FileData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Creator       string                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	FileHash      string                 `protobuf:"bytes,2,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileData) Reset() {
	*x = FileData{}
	mi := &file_filehash_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileData) ProtoMessage() {}

func (x *FileData) ProtoReflect() protoreflect.Message {
	mi := &file_filehash_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileData.ProtoReflect.Descriptor instead.
func (*FileData) Descriptor() ([]byte, []int) {
	return file_filehash_proto_rawDescGZIP(), []int{4}
}

func (x *FileData) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *FileData) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

type GenesisState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileData            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	mi := &file_filehash_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	mi := &file_filehash_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_filehash_proto_rawDescGZIP(), []int{5}
}

func (x *GenesisState) GetFiles() []*FileData {
	if x != nil {
		return x.Files
	}
	return nil
}

var File_filehash_proto protoreflect.FileDescriptor

const file_filehash_proto_rawDesc = "" +
	"\n" +
	"\x0efilehash.proto\x12\x12doctorium.filehash\x1a*cosmos/base/query/v1beta1/pagination.proto\x1a\x1fcosmos/tx/v1beta1/service.proto\x1a\x1cgoogle/api/annotations.proto\"F\n" +
	"\rMsgUploadFile\x12\x18\n" +
	"\acreator\x18\x01 \x01(\tR\acreator\x12\x1b\n" +
	"\tfile_hash\x18\x02 \x01(\tR\bfileHash\"1\n" +
	"\x15MsgUploadFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"^\n" +
	"\x14QueryFileListRequest\x12F\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2&.cosmos.base.query.v1beta1.PageRequestR\n" +
	"pagination\"\x94\x01\n" +
	"\x15QueryFileListResponse\x122\n" +
	"\x05files\x18\x01 \x03(\v2\x1c.doctorium.filehash.FileDataR\x05files\x12G\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2'.cosmos.base.query.v1beta1.PageResponseR\n" +
	"pagination\"A\n" +
	"\bFileData\x12\x18\n" +
	"\acreator\x18\x01 \x01(\tR\acreator\x12\x1b\n" +
	"\tfile_hash\x18\x02 \x01(\tR\bfileHash\"B\n" +
	"\fGenesisState\x122\n" +
	"\x05files\x18\x01 \x03(\v2\x1c.doctorium.filehash.FileDataR\x05files2\x90\x01\n" +
	"\x03Msg\x12\x88\x01\n" +
	"\n" +
	"UploadFile\x12!.doctorium.filehash.MsgUploadFile\x1a).doctorium.filehash.MsgUploadFileResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/doctorium/filehash/v1/UploadFile2\x92\x01\n" +
	"\x05Query\x12\x88\x01\n" +
	"\bFileList\x12(.doctorium.filehash.QueryFileListRequest\x1a).doctorium.filehash.QueryFileListResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/doctorium/filehash/v1/FileListB\x1cZ\x1adoctorium/x/filehash/typesb\x06proto3"

var (
	file_filehash_proto_rawDescOnce sync.Once
	file_filehash_proto_rawDescData []byte
)

func file_filehash_proto_rawDescGZIP() []byte {
	file_filehash_proto_rawDescOnce.Do(func() {
		file_filehash_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_filehash_proto_rawDesc), len(file_filehash_proto_rawDesc)))
	})
	return file_filehash_proto_rawDescData
}

var file_filehash_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_filehash_proto_goTypes = []any{
	(*MsgUploadFile)(nil),         // 0: doctorium.filehash.MsgUploadFile
	(*MsgUploadFileResponse)(nil), // 1: doctorium.filehash.MsgUploadFileResponse
	(*QueryFileListRequest)(nil),  // 2: doctorium.filehash.QueryFileListRequest
	(*QueryFileListResponse)(nil), // 3: doctorium.filehash.QueryFileListResponse
	(*FileData)(nil),              // 4: doctorium.filehash.FileData
	(*GenesisState)(nil),          // 5: doctorium.filehash.GenesisState
	(*query.PageRequest)(nil),     // 6: cosmos.base.query.v1beta1.PageRequest
	(*query.PageResponse)(nil),    // 7: cosmos.base.query.v1beta1.PageResponse
}
var file_filehash_proto_depIdxs = []int32{
	6, // 0: doctorium.filehash.QueryFileListRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	4, // 1: doctorium.filehash.QueryFileListResponse.files:type_name -> doctorium.filehash.FileData
	7, // 2: doctorium.filehash.QueryFileListResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	4, // 3: doctorium.filehash.GenesisState.files:type_name -> doctorium.filehash.FileData
	0, // 4: doctorium.filehash.Msg.UploadFile:input_type -> doctorium.filehash.MsgUploadFile
	2, // 5: doctorium.filehash.Query.FileList:input_type -> doctorium.filehash.QueryFileListRequest
	1, // 6: doctorium.filehash.Msg.UploadFile:output_type -> doctorium.filehash.MsgUploadFileResponse
	3, // 7: doctorium.filehash.Query.FileList:output_type -> doctorium.filehash.QueryFileListResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_filehash_proto_init() }
func file_filehash_proto_init() {
	if File_filehash_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_filehash_proto_rawDesc), len(file_filehash_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_filehash_proto_goTypes,
		DependencyIndexes: file_filehash_proto_depIdxs,
		MessageInfos:      file_filehash_proto_msgTypes,
	}.Build()
	File_filehash_proto = out.File
	file_filehash_proto_goTypes = nil
	file_filehash_proto_depIdxs = nil
}
